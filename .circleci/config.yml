# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

orbs:
  ruby: circleci/ruby@0.1.2 # Ruby orb registry: https://circleci.com/orbs/registry/orb/circleci/ruby

defaults: &defaults
  docker:
    - image: circleci/ruby:2.7.2-browsers
    - image: circleci/postgres:11.5
      environment:
        POSTGRES_USER: moss_back_test
        POSTGRES_PASSWORD: moss_back_test
        POSTGRES_DB: moss_back_test

bundle_restore_cache: &bundle_restore_cache
  restore_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}

bundle_save_cache: &bundle_save_cache
  save_cache:
    key: v1-bundle-install-{{ arch }}-{{ checksum "Gemfile.lock" }}
    paths:
      - ~/vendor/bundle

bundle_install: &bundle_install
  run:
    name: Install Ruby Dependencies
    command: bundle install --path ~/vendor/bundle

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-moss-bundle-v1-{{ checksum "Gemfile.lock" }}
            - rails-moss-bundle-v1-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-moss-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Run lint tasks
          command: bundle exec rubocop

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Create database
          command: bin/rails db:create RAILS_ENV=test

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
